package IHM.Etudiant;

import AdmissionPostLicence.EtudiantInconnu;
import AdmissionPostLicence.GestionEtudiant;
import AdmissionPostLicence.Ministere;
import AdmissionPostLicence.MinistereHelper;
import AdmissionPostLicence.Rectorat;
import AdmissionPostLicence.identite;
import Ministere.AccreditationMapper;
import Ministere.pojo.Accreditation;
import Rectorat.CandidatureMapper;
import Rectorat.pojo.Candidature;
import Universite.GestionEtudiant.EtudiantMapper;
import Universite.pojo.Etudiant;
import Util.GetObjectCorba;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import org.omg.CosNaming.NamingContext;
import org.omg.CosNaming.NamingContextPackage.CannotProceed;
import org.omg.CosNaming.NamingContextPackage.InvalidName;
import org.omg.CosNaming.NamingContextPackage.NotFound;

/**
 *
 * @author johnny
 */
public class MenuPrincipal extends javax.swing.JFrame {
    private final GestionEtudiant g;
    private final org.omg.CORBA.ORB orb;
    private final Ministere m;
    private final Rectorat r;
    private final identite moi;
    private boolean panelChoixVisible = false;
    private List<Candidature> mesCandidatures = new ArrayList<>();
    /**
     * Creates new form MenuPrincipal
     * @param m
     * @param r
     * @param g
     * @param orb
     * @param i
     */
    public MenuPrincipal(Ministere m, Rectorat r,GestionEtudiant g,org.omg.CORBA.ORB orb,identite id) {
        initComponents();
        this.g=g;
        this.orb=orb;
        this.m=m;
        this.r = r;
        this.moi = id;
        ArrayList<Accreditation> lesAccreditations = AccreditationMapper.listAccreditationsToAccredidationCorba(this.m.recupererAccreditations());

        String[] iorRectorats;
        iorRectorats = m.getListeRectorat();
        Rectorat rTemp;
        List<Candidature> lesCandidaturesTemp;
        for(String ior : iorRectorats) {
            rTemp = GetObjectCorba.getRectoratCorba(orb, ior);
            if( rTemp != null) {
                try {
                     lesCandidaturesTemp = CandidatureMapper.candidaturesCorbaToListCandidature(rTemp.recupererCandidaturesEtudiant(moi));
                     if(!lesCandidaturesTemp.isEmpty()){
                         for (Candidature lesCandidaturesTemp1 : lesCandidaturesTemp) {
                             mesCandidatures.add(lesCandidaturesTemp1);
                             jComboBoxAccreditations.addItem(lesCandidaturesTemp1.getMaster() + "-" + lesCandidaturesTemp1.getUniversite());
                         }
                     }
                } catch (EtudiantInconnu ex) {
                    Logger.getLogger(MenuPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        jComboBoxAccreditations.setSelectedIndex(-1);
        
        jComboBoxAccreditations.addActionListener (new ActionListener () {
            public void actionPerformed(ActionEvent e) {    
                if(jComboBoxAccreditations.getSelectedIndex()!=-1){
                    String parts = jComboBoxAccreditations.getSelectedItem().toString().replaceAll("\\-.*","");
                    System.out.println(parts);
                    //getCandidature(jComboBoxAccreditations.getSelectedItem());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxAccreditations = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldUniversite = new javax.swing.JTextField();
        jTextFieldMaster = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Menu principal Gestion Etudiant");

        jLabel2.setText("Séléctionner une candidature :");

        jLabel3.setText("Formation : ");

        jLabel4.setText("Université :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(281, 281, 281)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBoxAccreditations, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldUniversite, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(jTextFieldMaster, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(211, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxAccreditations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldMaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldUniversite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(247, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    }

    /**
     * Renvoi la Candidature visé par ce master
     * @param master
     * @return 
     */
    public Candidature getCandidature(String master){
        for (Candidature mesCandidatures1 : mesCandidatures) {
            if(mesCandidatures1.getEtu().getIne().equals(moi.ine) && mesCandidatures1.getMaster().equals(master)){
                return mesCandidatures1;
            }
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBoxAccreditations;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextFieldMaster;
    private javax.swing.JTextField jTextFieldUniversite;
    // End of variables declaration//GEN-END:variables
}
