package responsableFormation;

import AdmissionPostLicence.GestionEtudiant;
import AdmissionPostLicence.Master;
import AdmissionPostLicence.Rectorat;
import AdmissionPostLicence.candidature;
import Util.GetObjectCorba;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * 
 */
public class MainWindow extends javax.swing.JFrame {

    private final org.omg.CORBA.ORB orb;
    
    private final String comboDefault = "Sélectionnez";
    
    private final Rectorat rectorat;
    private final String universite;
    
    private final HashMap<String, Master> masters = new HashMap<>();
    
    private final GestionEtudiant gestionEtudiant;
    
    /**
     * Creates new form PrincipalTemp
     * @param unOrb
     * @param unRectorat
     * @param uneUniversite
     */
    public MainWindow(org.omg.CORBA.ORB unOrb, Rectorat unRectorat, String uneUniversite) {
        initComponents();
        
        orb = unOrb;
        
        rectorat = unRectorat;
        universite = uneUniversite;
        
        // Récupération de la gestion etudiant de l'université
        String iorGe = rectorat.getGestEtu(universite);
        gestionEtudiant = GetObjectCorba.getGestionEtudiantCorba(orb, iorGe);
        
        // Récupération de la liste des formations de l'université choisie
        String[] iorMasters = rectorat.getListeMaster(universite);
        
        // Remplissage du menu déroulant contenant la liste des formations
        Master m;
        for(String ior : iorMasters) {
            m = GetObjectCorba.getMasterCorba(ior, orb);
            if(m != null) {
                masters.put(m.nom(), m);
                masterComboBox.addItem(m.nom());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        masterComboBox = new javax.swing.JComboBox();
        afficherButton = new javax.swing.JButton();
        centerScrollPane = new javax.swing.JScrollPane();
        candidaturesPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        topPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Choix de la formation :");

        masterComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sélectionnez" }));

        afficherButton.setText("Afficher candidatures");
        afficherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficherButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(masterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(afficherButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(masterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(afficherButton))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        candidaturesPanel.setLayout(new java.awt.GridLayout(0, 1));
        centerScrollPane.setViewportView(candidaturesPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(centerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE)
                    .addComponent(topPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(centerScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void afficherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficherButtonActionPerformed
        // Récupération de la formation choisie
        String masterSel = (String) masterComboBox.getSelectedItem();

        // On vide la grille contenant les candidatures
        candidaturesPanel.removeAll();
        candidaturesPanel.revalidate();
        candidaturesPanel.repaint();

        if(masterSel.equals(comboDefault)) {
            // Affichage d'un message d'erreur
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un master", "Gestion des candidatures", JOptionPane.ERROR_MESSAGE);
        } else {
            // Récupération de l'objet corba du master sélectionné
            Master m = masters.get(masterSel);

            if(m != null) {
                candidature[] candidatures = m.consulterEtatCandidatures();
                if(candidatures.length == 0) {
                    // Affichage d'une pop-up
                    JOptionPane.showMessageDialog(this, "Aucune candidature pour le master " + masterSel, "Gestion des candidatures", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    // Affichage des candidatures
                    for(candidature c : candidatures) {
                        candidaturesPanel.add(new CandidaturePanel(c, m, gestionEtudiant));
                    }
                    candidaturesPanel.revalidate();
                    candidaturesPanel.repaint();
                }
            }
        }
    }//GEN-LAST:event_afficherButtonActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton afficherButton;
    private javax.swing.JPanel candidaturesPanel;
    private javax.swing.JScrollPane centerScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JComboBox masterComboBox;
    private javax.swing.JPanel topPanel;
    // End of variables declaration//GEN-END:variables
}
